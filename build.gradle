plugins {
  id "com.github.spotbugs" version "5.2.3"
  id 'com.palantir.git-version' version '3.1.0'

  id 'java'
  id 'java-library'
  id 'maven-publish'
  id 'checkstyle'
  id 'signing'
  id 'org.owasp.dependencycheck' version '8.4.2'
}

group 'com.pippsford'
if ((versionDetails().branchName ==~ /^(main)|(master)|(release.*)|(patch.*)$/) && versionDetails().isCleanTag && gitVersion() ==~ /^\d+(\.\d+)+(-.+)?$/) {
  project.version = gitVersion()
} else {
  print versionDetails()
  project.version = '100-SNAPSHOT'
}

repositories {
  mavenCentral()
}

dependencies {
  implementation group: 'jakarta.json', name: 'jakarta.json-api', version: '2.1.3'
  implementation group: 'jakarta.annotation', name: 'jakarta.annotation-api', version: '3.0.0'
  implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.36'
  implementation group: 'com.pippsford', name: 'common-utils', version: '1.15'
  implementation group: 'com.googlecode.owasp-java-html-sanitizer', name: 'owasp-java-html-sanitizer', version: '20240325.1'
  implementation group: 'com.github.spotbugs', name: 'spotbugs-annotations', version: '4.2.0'

  testImplementation group: 'com.pippsford', name: 'canonical-json', version: '3.3'
  testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.0'
  testImplementation group: 'com.google.jimfs', name: 'jimfs', version: '1.2'
  testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
}

checkstyle {
  toolVersion = "8.41.1"
  configFile = rootProject.file('config/checkstyle/checkstyle.xml')
}

checkstyleTest {
  enabled = false
}

spotbugs {
  // toolVersion = '3.1.12'
  ignoreFailures = true
  effort = 'max'
}
spotbugsMain {
  reports {
    html {
      enabled = true
    }
  }
}
spotbugsTest {
  enabled = false
}

java {
  withSourcesJar()
  withJavadocJar()
  toolchain {
    languageVersion = JavaLanguageVersion.of(17)
  }
}

javadoc {
  options.addStringOption('Xmaxwarns', '65536')
}

test {
  useJUnitPlatform()
}

artifacts {
  archives javadocJar, sourcesJar
}

publishing {
  publications {
    mavenJava(MavenPublication) {
      from components.java
      pom {
        name = 'Stencil Templating System'
        packaging = 'jar'
        description = 'Stencil templating system'
        url = 'https://github.com/simon-greatrix/stencil'

        scm {
          connection = 'scm:git:https://github.com/simon-greatrix/stencil'
          developerConnection = 'scm:git:https://github.com/simon-greatrix/stencil'
          url = 'https://github.com/simon-greatrix/stencil'
        }

        licenses {
          license {
            name = 'The Apache License, Version 2.0'
            url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
          }
        }

        developers {
          developer {
            id = 'simon-greatrix'
            name = 'Simon Greatrix'
            email = 'simon@pippsford.com'
          }
        }
      }
    }
  }

  repositories {
    maven {
      name = 'file'
      url = layout.buildDirectory.dir('repository')
    }
  }
}

tasks.withType(JavaCompile).configureEach {
  options.encoding = 'UTF-8'
}

tasks.withType(Javadoc).configureEach {
  options.encoding = 'UTF-8'
}

signing {
  useGpgCmd()
  sign publishing.publications.mavenJava
}

tasks.register("createCentralZip", Zip) {
  dependsOn tasks.named("publishMavenJavaPublicationToFileRepository")
  from layout.buildDirectory.dir("repository")
  destinationDirectory = layout.buildDirectory.dir("publications")
  archiveFileName = "central.zip"
}
