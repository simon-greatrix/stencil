buildscript {
  repositories {
    mavenCentral()
  }
  dependencies {
    classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.7"
  }
}

plugins {
  id "com.github.spotbugs" version "4.7.10"
  id 'com.palantir.git-version' version '0.12.3'
  id 'signing'
  id 'java'
  id 'maven-publish'
}

apply plugin: 'java'

apply plugin: 'maven-publish'
apply plugin: 'com.github.spotbugs'
apply plugin: 'checkstyle'
apply plugin: 'maven'

group 'com.pippsford'
if ((versionDetails().branchName ==~ /^(main)|(master)|(release.*)|(patch.*)$/) && versionDetails().isCleanTag && gitVersion() ==~ /^\d+(\.\d+)+(-.+)?$/) {
  project.version = gitVersion()
} else {
  print versionDetails()
  project.version = '100-SNAPSHOT'
}
project.version='1.0'

repositories {
  if (version.endsWith("SNAPSHOT")) {
    mavenLocal()
  }
  mavenCentral()
}

dependencies {
  implementation group: 'javax.json', name: 'javax.json-api', version: '1.1.4'
  implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.36'
  implementation group: 'com.pippsford', name: 'common-utils', version: '1.15'
  implementation group: 'com.googlecode.owasp-java-html-sanitizer', name: 'owasp-java-html-sanitizer', version: '20200713.1'
  implementation group: 'com.github.spotbugs', name: 'spotbugs-annotations', version: '4.2.0'

  testImplementation group: 'io.setl', name: 'canonical-json', version: '2.1'
  testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.0'
  testImplementation group: 'com.google.jimfs', name: 'jimfs', version: '1.2'
  testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
}

checkstyle {
  toolVersion = "8.41.1"
  configFile = rootProject.file('config/checkstyle/checkstyle.xml')
}

checkstyleTest {
  enabled = false
}

spotbugs {
  // toolVersion = '3.1.12'
  ignoreFailures = true
  effort = 'max'
}
spotbugsMain {
 reports {
   html {
     enabled = true
   }       
 }
}
spotbugsTest {
  enabled = false
}


java {
  withSourcesJar()
  sourceCompatibility = JavaVersion.VERSION_11
  targetCompatibility = JavaVersion.VERSION_11
}

javadoc {
  source = sourceSets.main.allJava
}

task javadocJar(type: Jar) {
  classifier = 'javadoc'
  from javadoc
}


test {
  useJUnitPlatform()
  reports {
    junitXml.enabled = true
    html.enabled = true
  }
}

task sourceJar(type: Jar) {
  from sourceSets.main.allJava
}

artifacts {
  archives javadocJar, sourcesJar
}

signing {
  useGpgCmd()
  sign configurations.archives
}




// Upload to Maven Central
uploadArchives {
  repositories {
    mavenDeployer {
      beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

      repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
        authentication(userName: ossrhUsernamePippsford, password: ossrhPasswordPippsford)
      }

      snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
        authentication(userName: ossrhUsernamePippsford, password: ossrhPasswordPippsford)
      }

      pom.project {
        name 'Stencil Templating System'
        packaging 'jar'
        // optionally artifactId can be defined here
        description 'Stencil templating system'
        url 'https://github.com/simon-greatrix/stencil'

        scm {
          connection 'scm:git:https://github.com/simon-greatrix/stencil'
          developerConnection 'scm:git:https://github.com/simon-greatrix/stencil'
          url 'https://github.com/simon-greatrix/stencil'
        }

        licenses {
          license {
            name 'The Apache License, Version 2.0'
            url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
          }
        }

        developers {
          developer {
            id 'simon-greatrix'
            name 'Simon Greatrix'
            email 'simon@pippsford.com'
          }
        }
      }
    }
  }
}
