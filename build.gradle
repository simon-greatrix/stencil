buildscript {
  repositories {
    mavenCentral()
  }
  dependencies {
    classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.7"
  }
}

plugins {
  id "com.github.spotbugs" version "4.6.0"
  id 'com.palantir.git-version' version '0.12.3'
}

apply plugin: 'java'

apply plugin: 'maven-publish'
apply plugin: 'com.github.spotbugs'
apply plugin: 'checkstyle'


group 'io.setl'
if ( (versionDetails().branchName ==~ /^(master)|(release.*)|(patch.*)$/) && versionDetails().isCleanTag ) {
  project.version = gitVersion()
} else {
  print versionDetails()
  project.version = '100-SNAPSHOT'
}

repositories {
  if (version.endsWith("SNAPSHOT")) {
    mavenLocal()
  }
  mavenCentral()
}

dependencies {
  implementation group: 'javax.json', name: 'javax.json-api', version: '1.1.4'
  implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.36'
  implementation group: 'com.pippsford', name: 'common-utils', version: '1.15'
  implementation group: 'com.googlecode.owasp-java-html-sanitizer', name: 'owasp-java-html-sanitizer', version: '20200713.1'
  implementation group: 'com.github.spotbugs', name: 'spotbugs-annotations', version: '4.2.0'

  testImplementation group: 'io.setl', name: 'canonical-json', version: '2.1'
  testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.0'
  testImplementation group: 'com.google.jimfs', name: 'jimfs', version: '1.2'
  testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
}

checkstyle {
  toolVersion = "8.41.1"
  configFile = rootProject.file('config/checkstyle/checkstyle.xml')
}

checkstyleTest {
  enabled = false
}

spotbugs {
  // toolVersion = '3.1.12'
  ignoreFailures = true
  effort = 'max'
}
spotbugsMain {
 reports {
   html {
     enabled = true
   }       
 }
}

test {
  useJUnitPlatform()
  reports {
    junitXml.enabled = true
    html.enabled = true
  }
}

task sourceJar(type: Jar) {
  from sourceSets.main.allJava
}

publishing {
  publications {
    mavenJava(MavenPublication) {
      from components.java
      artifact sourceJar {
        classifier "sources"
      }
    }
  }
  repositories {
    maven {
      credentials {
        username = project.hasProperty('mavenUser') ? "$mavenUser" : ''
        password = project.hasProperty('mavenPassword') ? "$mavenPassword" : ''
      }
      if (version.endsWith("SNAPSHOT")) {
        url 'http://si-nexus01.dev.setl.io:8081/repository/setl-snaps'
      } else {
        url 'http://si-nexus01.dev.setl.io:8081/repository/setl-libs'
      }
    }
  }
}
